name: Build (nightly)

on:
  push:
    paths:
    - '.github/workflows/nightly.yml'
  schedule:
    #Â Run every day at 0400.
    - cron: '0 04 * * *'

defaults:
  run:
    shell: bash

jobs:
  nightly:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            ghc-ver: 8.10.2.2
            stack-ver: 2.5.1
          - os: macos-latest
            ghc-ver: 8.10.2
            stack-ver: 2.5.1

    env:
      ARGS: "--stack-yaml=stack-${{ matrix.ghc-ver }}.yaml --no-terminal --system-ghc"
      FLAGS: ""
      EXTRA_ARGS: "--ghc-options=-split-sections"

    runs-on: ${{ matrix.os }}

    steps:
    - name: Add environment variables for the file name of nightly build
      run: |
        short_sha=${GITHUB_SHA::7}
        echo "nightly_dir=`echo Agda-nightly-${short_sha}-${{ runner.os }}`" >> $GITHUB_ENV

    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - uses: haskell/actions/setup@v1
      with:
        ghc-version: ${{ matrix.ghc-ver }}
        enable-stack: true
        stack-version: ${{ matrix.stack-ver }}

    - uses: actions/cache@v2
      name: Cache dependencies (Unix-like)
      id: cache-on-unix
      if: ${{ runner.os == 'Linux' }}
      with:
        path: "~/.stack"
        # A unique cache is used for each stack.yaml.
        key: ${{ runner.os }}-stack-nightly-${{ matrix.stack-ver }}-${{ hashFiles(format('stack-{0}.yaml', matrix.ghc-ver)) }}

    - uses: actions/cache@v2
      name: Cache dependencies (Windows)
      id: cache-on-win64
      if: ${{ runner.os == 'Windows' }}
      with:
        path: ${{ env.STACK_ROOT }}
        key: ${{ runner.os }}-stack-nightly-${{ matrix.stack-ver }}-${{ hashFiles(format('stack-{0}.yaml', matrix.ghc-ver)) }}

    - name: Update the package index of stack
      if: ${{ !steps.cache-on-unix.outputs.cache-hit && !steps.cache-on-win64.outputs.cache-hit }}
      run: stack update --silent

    - name: Build dependencies
      if: ${{ !steps.cache-on-unix.outputs.cache-hit && !steps.cache-on-win64.outputs.cache-hit }}
      run: stack build ${ARGS} ${EXTRA_ARGS} ${FLAGS} --only-dependencies --silent

    - name: Build Agda (Unix-like)
      if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
      run: stack build ${ARGS} ${EXTRA_ARGS} ${FLAGS}

    - name: Build Agda which may fail on the first try (Windows)
      uses: nick-invision/retry@v2
      if: ${{ runner.os == 'Windows' }}
      # Liang-Ting (2020-12-8):
      # Due to a ghc bug on Windows, it is necessary to build Agda twice (or more)
      # See:
      #   - https://github.com/agda/agda/issues/4543
      #   - https://gitlab.haskell.org/ghc/ghc/-/issues/18634
      #
      # Liang-Ting (2020-12-8):
      # It also fails to compile with the ghc option -split-sections on Windows
      with:
        max_attempts: 3
        timeout_minutes: 50
        retry_on: error
        command: stack build ${{ env.ARGS }} ${{ env.FLAGS }}

    - name: Pack artefacts
      run: |
        mkdir -p ${{ env.nightly_dir }}

        if [[ "$OSTYPE" == "msys"* ]]
        then
          cp -a .github/*.bat ${{ env.nightly_dir }}
        else
          cp -a .github/*.sh ${{ env.nightly_dir }}
        fi

        cp -a src/data ${{ env.nightly_dir }}
        cp -a $(stack path --local-install-root ${ARGS})/bin ${{ env.nightly_dir }}

        # Msys2 does not ship strip by default
        if [[ "$OSTYPE" == "msys"* ]]
        then
          stack ${ARGS} exec -- strip ${{ env.nightly_dir }}/bin/*
        else
          strip ${{ env.nightly_dir }}/bin/*
        fi

        tar -cvf ${{ env.nightly_dir }}.tar ${{ env.nightly_dir }}

    - uses: actions/upload-artifact@v2
      with:
        path: ${{ env.nightly_dir }}.tar
        name: ${{ env.nightly_dir }}
        if-no-files-found: error
        retention-days: 3
