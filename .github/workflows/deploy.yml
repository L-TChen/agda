######################################################
##                                                  ##
##  !!!! Autogenerated YAML file, do not edit !!!!  ##
##                                                  ##
##  Edit source in /src/github/workflows/ instead!  ##
##                                                  ##
######################################################
defaults:
  run:
    shell: bash
jobs:
  auto-cancel:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion
      == 'success' }}
    runs-on: Ubuntu-latest
    steps:
    - uses: styfle/cancel-workflow-action@0.11.0
      with:
        access_token: ${{ github.token }}
  build:
    if: ${{ always() }}
    needs: auto-cancel
    runs-on: ${{ matrix.os }}
    steps:
    - id: agda
      name: Setup Agda
      uses: wenkokke/setup-agda@latest
      with:
        agda-version: HEAD
        bdist-compress-exe: true
        bdist-retention-days: 3
        bdist-upload: true
        force-cluster-counting: true
        force-no-optimise-heavily: true
    strategy:
      fail-fast: false
      matrix:
        os:
        - windows-latest
        - macos-latest
        - ubuntu-20.04
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        path: artifacts
    - env:
        GITHUB_TOKEN: ${{ github.token }}
      name: Delete the nightly tag if any
      uses: dev-drprasad/delete-tag-and-release@v0.2.0
      with:
        delete_release: true
        tag_name: nightly
    - env:
        GITHUB_TOKEN: ${{ github.token }}
      name: Create a nightly release and upload artifacts as release assets
      run: |
        assets=()
        for asset in artifacts/**/*; do
          assets+=("-a" "$asset")
        done

        sha=${{ github.sha }}
        hub release create "${assets[@]}" -m "Nightly Build (${sha:0:7}@${{ github.ref_name }})" 'nightly'
name: Deploy
'on':
  workflow_dispatch: null
  workflow_run:
    branches:
    - master
    types:
    - completed
    workflows:
    - Build, Test, and Benchmark
